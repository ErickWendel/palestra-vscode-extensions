{
    /*
        // Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and 
        // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
        // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
        // same ids are connected.
        // Example:
        "Print to console": {
            "prefix": "log",
            "body": [
                "console.log('$1');",
                "$2"
            ],
            "description": "Log output to console"
        }
    */
    "For Loop": {
        "prefix": "for",
        "body": [
            "for (var ${1:index} = 0; ${1:index} < ${2:array}.length; ${1:index}++) {",
            "\tvar ${3:element} = ${2:array}[${1:index}];",
            "\t$0",
            "}"
        ],
        "description": "Log output to console"
    },
    "Create Class": {
        "prefix": "class",
        "body": [
            "class ${1:myClass} {",
            "\tconstructor (){}",
            "\t${2:myMethod}(${3:myParams}) {",
            "\t\t $4",
            "\t}",
            "}",
            "new ${1:myClass}().${2:myMethod}($5)"
        ],
        "description": "Create Class with Execution"
    },
    "Hapi Init": {
        "prefix": "hapi:new",
        "body": [
            "const Hapi = require('hapi')",
            "const Joi = require('joi')",
            "const app = new Hapi.Server()",
            "app.connection({port: $1})",
            "\n",
            "app.route([",
            "\t{",
            "\t\tpath: '${2:/}',",
            "\t\tmethod: '${3|GET,POST,PUT,DELETE|}',",
            "\t\thandler:  async (req, reply) => {",
            "\t\t\treturn await Promise.resolve(reply({ ok: true}))",
            "\t\t}",
            "\t},",
            "\t$0",
            "])",
            "\n",
            "\n",
            "app.start(()=> console.log(`running at: ${app.info.port}` ))"
        ],
        "description": "Create Simple Hapi"
    },
    "Hapi Route": {
        "prefix": "hapi:route",
        "body":[
            "\t{",
            "\t\tpath: '${2:/}',",
            "\t\tmethod: '${3|GET,POST,PUT,DELETE|}',",
            "\t\thandler:  async (req, reply) => {",
            "\t\t\treturn await Promise.resolve(reply({ ok: true}))",
            "\t\t}",
            "\t},",
            "\n$0"
            
        ],
        "description": "A Route"
    },
    "Hapi Transaction": {
        "prefix": "hapi:route:transaction",
        "body":[
            "{",
            "\t\tpath: '${2:/}',",
            "\t\tmethod: '${3|POST,PUT|}',",
            "\t\tconfig: {",
                "\t\t\thandler:  async (req, reply) => {",
                    "\t\t\t\treturn await Promise.resolve(reply({ $5: req.$4.$5}))",
                    "\t\t\t},",
                "\t\t\tvalidate: {",
                    "\t\t\t\t${4|payload,query|}: {",
                    "\t\t\t\t\t${5:name}: Joi.${6|string, number|}().required(),",
                "\t\t\t}",
            
            "\t\t}",
            
            "\t},",
            "\t$0",
            "}"
        ],
        "description": "A Route"
    }
}